(*
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
400万を超えない範囲のfibonacci数列のうち偶数の合計を求めなさい
 *)

(*
 * Fibbonacci
 *)
let rec fibonacci n =
   if n = 0 || n = 1 
   then 1
   else fibonacci (n - 1) + fibonacci (n - 2);;

(*
 * replace into 0 ,if a fibonacci is odd 
 *)
let even_fibonacci n = 
   if 0 = (fibonacci n) mod 2
   then fibonacci n 
   else 0;;

(*
 * resolver 
 *)
let rec resolve = fun x y ->
   if (fibonacci x) > 4000000
   then y
   else resolve (x + 1) (y + (even_fibonacci x));;


Printf.printf "ANSWER: %d \n" (resolve 1 0);;


   